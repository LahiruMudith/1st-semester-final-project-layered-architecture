package edu.ijse.mvc.finalproject.bo.impl;

import edu.ijse.mvc.finalproject.bo.EmployeeBO;
import edu.ijse.mvc.finalproject.dao.DAOFactory;
import edu.ijse.mvc.finalproject.dao.impl.EmployeeDAOImpl;
import edu.ijse.mvc.finalproject.dao.impl.FitnessCenterDAOImpl;
import edu.ijse.mvc.finalproject.dto.EmployeeDto;
import edu.ijse.mvc.finalproject.dto.FitnessCenterDto;
import edu.ijse.mvc.finalproject.entity.Employee;
import edu.ijse.mvc.finalproject.entity.FitnessCenter;

import java.sql.SQLException;
import java.util.ArrayList;

public class EmployeeBOImpl implements EmployeeBO {
    EmployeeDAOImpl employeeBO = (EmployeeDAOImpl) DAOFactory.getInstance().getDAO(DAOFactory.DAOType.EMPLOYEE);
    FitnessCenterDAOImpl fitnessCenterDAO = (FitnessCenterDAOImpl) DAOFactory.getInstance().getDAO(DAOFactory.DAOType.FITNESS_CENTER);

    @Override
    public boolean save(EmployeeDto employeeDto) {
        return employeeBO.save(new Employee(
                employeeDto.getEmployee_id(),
                employeeDto.getCenter_id(),
                employeeDto.getName(),
                employeeDto.getPhone_number(),
                employeeDto.getDate_of_hire(),
                employeeDto.getPosition(),
                employeeDto.getAge(),
                employeeDto.getAddress()
        ));
    }

    @Override
    public boolean delete(String text) {
        return employeeBO.delete(text);
    }

    @Override
    public boolean update(EmployeeDto employeeDto) {
        return employeeBO.update(new Employee(
                employeeDto.getEmployee_id(),
                employeeDto.getCenter_id(),
                employeeDto.getName(),
                employeeDto.getPhone_number(),
                employeeDto.getDate_of_hire(),
                employeeDto.getPosition(),
                employeeDto.getAge(),
                employeeDto.getAddress()
        ));
    }

    @Override
    public ArrayList<FitnessCenterDto> getCenterDetails() throws SQLException {
        ArrayList<FitnessCenterDto> list = new ArrayList<>();
        ArrayList<FitnessCenter> fitnessCenterDtos = fitnessCenterDAO.getAll();
        for (FitnessCenter fitnessCenter : fitnessCenterDtos) {
            list.add(new FitnessCenterDto(
                    fitnessCenter.getCenter_id(),
                    fitnessCenter.getAdmin_id(),
                    fitnessCenter.getCenter_name(),
                    fitnessCenter.getLocation()
            ));
        };
        return list;
    }
}
